"console.log()" is the command to print something to the developer console in your browser. 
You can use this to print the results from any of the following articles and exercises to the console. 

Another way to include JavaScript in a webpage is through an external script. This is very similar to linking external CSS docs to your website.
  <script src="javascript.js"></script>

JavaScript files have the extension ".js" similar to .css for stylesheets. External JavaScript files are used for more complex scripts.

A variable is a “named storage” for data. We can use variables to store goodies, visitors, and other data.
To create a variable in JavaScript, use the "let" keyword.

    # The statement below creates (in other words: declares) a variable with the name “message”:
    let message;

    # Now, we can put some data into it by using the assignment operator "=":
    message = 'Hello'

    # NOTE: we can declare AND assign variables on the same line
    let message = 'Hello'

    # We can now access the variable (Saves this variable in memory)
    alert(message); // shows the variable content

Delcaring twice will trigger an ERROR!

    let message = 'Hello"

    // Repeated "let"s leads to errors
    let message = 'World'

So, we should declare a variable once and then refer to it without let.

When variable name is multiple words use camelCase
    lowerstartUpper

$ and _ are valid naming conventions

    let $ = 1;
    let _ = 1;

    alert ($ + _); // 2

In prior versions of js, we can assign variables by mere assignment, it still works now id we dont "use strict" in our script

Works
    num = 5;
    alert num;

Does Not Work
    "use strict"

    num = 5; // Throws an error

Declaring an UNCHANGING variable, use "const"

    const birthDate = '18.04.1982'

These variables cannot be changed or reassigned

    const birthDate = '18.04.1983' // Throws an error

Usecase:

In practice constant variables are mainly used to assign difficult to remember values (unicodes to colors, etc)

EX:
    const COLOR_RED = "#F00"
    let color = COLOR_RED;
    alert color; // #F00

NOTE: capital-named constants are only used as aliases for “hard-coded” values.
In cases where we have yet to fill what the constant value will be use camelCase

Practice:
1. Declare two variables: admin and name.

    let admin;
    let name;

2. Assign the value "John" to name.

    name = "John"

3. Copy the value from name to admin.

    admin = name;

4. Show the value of admin using alert (must output “John”).

    alert name;

5. Create a variable with the name of our planet. How would you name such a variable?

    let planetName = "Earth"; // Use camelCase

6. Create a variable to store the name of a current visitor to a website. How would you name that variable?

    let currentVisitor;

7. Examine js below

    const birthday = '18.04.1982';

    const age = someCode(birthday);

How would we capitalize the variable names when birthday is known before the code is ran is age is a function callback?

    const BIRTHDAY = '18.04.1982'; // Birthday is known before code is ran so it should be ALL CAPS

    const age = someCode(birthday); // Age is the result of a callback function, we dont knwo this prior to running code and is NOT HARDCODED, camelCase!
    
